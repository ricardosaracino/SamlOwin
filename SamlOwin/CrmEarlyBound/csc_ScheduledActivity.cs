//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrmEarlyBound
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9479")]
	public enum csc_ScheduledActivityState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("csc_scheduledactivity")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9479")]
	public partial class csc_ScheduledActivity : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string csc_ActivityCategory = "csc_activitycategory";
			public const string csc_ActivityLocation = "csc_activitylocation";
			public const string csc_ActivityType = "csc_activitytype";
			public const string csc_Location = "csc_location";
			public const string csc_name = "csc_name";
			public const string csc_OffSite = "csc_offsite";
			public const string csc_RecurringDates = "csc_recurringdates";
			public const string csc_RecurringEndDate = "csc_recurringenddate";
			public const string csc_RecurringFrequency = "csc_recurringfrequency";
			public const string csc_RecurringFriday = "csc_recurringfriday";
			public const string csc_RecurringMonday = "csc_recurringmonday";
			public const string csc_RecurringSaturday = "csc_recurringsaturday";
			public const string csc_RecurringStartDate = "csc_recurringstartdate";
			public const string csc_RecurringSunday = "csc_recurringsunday";
			public const string csc_RecurringThursday = "csc_recurringthursday";
			public const string csc_RecurringTuesday = "csc_recurringtuesday";
			public const string csc_RecurringWednesday = "csc_recurringwednesday";
			public const string csc_Region = "csc_region";
			public const string csc_Religion = "csc_religion";
			public const string csc_ScheduledActivityId = "csc_scheduledactivityid";
			public const string Id = "csc_scheduledactivityid";
			public const string csc_ShiftDuration = "csc_shiftduration";
			public const string csc_ShiftEndAMPM = "csc_shiftendampm";
			public const string csc_ShiftEndHours = "csc_shiftendhours";
			public const string csc_ShiftEndMinutes = "csc_shiftendminutes";
			public const string csc_ShiftStartAMPM = "csc_shiftstartampm";
			public const string csc_ShiftStartHours = "csc_shiftstarthours";
			public const string csc_ShiftStartMinutes = "csc_shiftstartminutes";
			public const string csc_TypeOfOffenderAboriginal = "csc_typeofoffenderaboriginal";
			public const string csc_TypeOfOffenderElderly = "csc_typeofoffenderelderly";
			public const string csc_TypeOfOffenderEthnocultural = "csc_typeofoffenderethnocultural";
			public const string csc_TypeOfOffenderFemale = "csc_typeofoffenderfemale";
			public const string csc_TypeOfOffenderGeneral = "csc_typeofoffendergeneral";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string csc_csc_activitytype_csc_scheduledactivity_ActivityType = "csc_csc_activitytype_csc_scheduledactivity_ActivityType";
			public const string csc_csc_location_csc_scheduledactivity_ActivityLocation = "csc_csc_location_csc_scheduledactivity_ActivityLocation";
			public const string csc_csc_location_csc_scheduledactivity_Location = "csc_csc_location_csc_scheduledactivity_Location";
			public const string csc_csc_region_csc_scheduledactivity_Region = "csc_csc_region_csc_scheduledactivity_Region";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public csc_ScheduledActivity() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "csc_scheduledactivity";
		
		public const string EntitySchemaName = "csc_ScheduledActivity";
		
		public const string PrimaryIdAttribute = "csc_scheduledactivityid";
		
		public const string PrimaryNameAttribute = "csc_name";
		
		public const int EntityTypeCode = 10075;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_activitycategory")]
		public Microsoft.Xrm.Sdk.EntityReference csc_ActivityCategory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("csc_activitycategory");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ActivityCategory");
				this.SetAttributeValue("csc_activitycategory", value);
				this.OnPropertyChanged("csc_ActivityCategory");
			}
		}
		
		/// <summary>
		/// The Institutional Location that this Activity will be executed at.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_activitylocation")]
		public Microsoft.Xrm.Sdk.EntityReference csc_ActivityLocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("csc_activitylocation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ActivityLocation");
				this.SetAttributeValue("csc_activitylocation", value);
				this.OnPropertyChanged("csc_ActivityLocation");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_activitytype")]
		public Microsoft.Xrm.Sdk.EntityReference csc_ActivityType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("csc_activitytype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ActivityType");
				this.SetAttributeValue("csc_activitytype", value);
				this.OnPropertyChanged("csc_ActivityType");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_location")]
		public Microsoft.Xrm.Sdk.EntityReference csc_Location
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("csc_location");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_Location");
				this.SetAttributeValue("csc_location", value);
				this.OnPropertyChanged("csc_Location");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_name")]
		public string csc_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("csc_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_name");
				this.SetAttributeValue("csc_name", value);
				this.OnPropertyChanged("csc_name");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_offsite")]
		public System.Nullable<bool> csc_OffSite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_offsite");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_OffSite");
				this.SetAttributeValue("csc_offsite", value);
				this.OnPropertyChanged("csc_OffSite");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringdates")]
		public string csc_RecurringDates
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("csc_recurringdates");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringDates");
				this.SetAttributeValue("csc_recurringdates", value);
				this.OnPropertyChanged("csc_RecurringDates");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringenddate")]
		public System.Nullable<System.DateTime> csc_RecurringEndDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("csc_recurringenddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringEndDate");
				this.SetAttributeValue("csc_recurringenddate", value);
				this.OnPropertyChanged("csc_RecurringEndDate");
			}
		}
		
		/// <summary>
		/// Weekly, Bi-weekly, Tri-weekly, Monthly
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringfrequency")]
		public Microsoft.Xrm.Sdk.OptionSetValue csc_RecurringFrequency
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("csc_recurringfrequency");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringFrequency");
				this.SetAttributeValue("csc_recurringfrequency", value);
				this.OnPropertyChanged("csc_RecurringFrequency");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringfriday")]
		public System.Nullable<bool> csc_RecurringFriday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_recurringfriday");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringFriday");
				this.SetAttributeValue("csc_recurringfriday", value);
				this.OnPropertyChanged("csc_RecurringFriday");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringmonday")]
		public System.Nullable<bool> csc_RecurringMonday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_recurringmonday");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringMonday");
				this.SetAttributeValue("csc_recurringmonday", value);
				this.OnPropertyChanged("csc_RecurringMonday");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringsaturday")]
		public System.Nullable<bool> csc_RecurringSaturday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_recurringsaturday");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringSaturday");
				this.SetAttributeValue("csc_recurringsaturday", value);
				this.OnPropertyChanged("csc_RecurringSaturday");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringstartdate")]
		public System.Nullable<System.DateTime> csc_RecurringStartDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("csc_recurringstartdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringStartDate");
				this.SetAttributeValue("csc_recurringstartdate", value);
				this.OnPropertyChanged("csc_RecurringStartDate");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringsunday")]
		public System.Nullable<bool> csc_RecurringSunday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_recurringsunday");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringSunday");
				this.SetAttributeValue("csc_recurringsunday", value);
				this.OnPropertyChanged("csc_RecurringSunday");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringthursday")]
		public System.Nullable<bool> csc_RecurringThursday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_recurringthursday");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringThursday");
				this.SetAttributeValue("csc_recurringthursday", value);
				this.OnPropertyChanged("csc_RecurringThursday");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringtuesday")]
		public System.Nullable<bool> csc_RecurringTuesday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_recurringtuesday");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringTuesday");
				this.SetAttributeValue("csc_recurringtuesday", value);
				this.OnPropertyChanged("csc_RecurringTuesday");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringwednesday")]
		public System.Nullable<bool> csc_RecurringWednesday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_recurringwednesday");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_RecurringWednesday");
				this.SetAttributeValue("csc_recurringwednesday", value);
				this.OnPropertyChanged("csc_RecurringWednesday");
			}
		}
		
		/// <summary>
		/// The region in which the Activity was created
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_region")]
		public Microsoft.Xrm.Sdk.EntityReference csc_Region
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("csc_region");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_Region");
				this.SetAttributeValue("csc_region", value);
				this.OnPropertyChanged("csc_Region");
			}
		}
		
		/// <summary>
		/// a Link to the Religion Lookup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_religion")]
		public Microsoft.Xrm.Sdk.EntityReference csc_Religion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("csc_religion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_Religion");
				this.SetAttributeValue("csc_religion", value);
				this.OnPropertyChanged("csc_Religion");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_scheduledactivityid")]
		public System.Nullable<System.Guid> csc_ScheduledActivityId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("csc_scheduledactivityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ScheduledActivityId");
				this.SetAttributeValue("csc_scheduledactivityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("csc_ScheduledActivityId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_scheduledactivityid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.csc_ScheduledActivityId = value;
			}
		}
		
		/// <summary>
		/// Calculated based on the Shift Start and End times, and updated via the Plugin that controls this entities Creation and Update.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftduration")]
		public System.Nullable<int> csc_ShiftDuration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("csc_shiftduration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ShiftDuration");
				this.SetAttributeValue("csc_shiftduration", value);
				this.OnPropertyChanged("csc_ShiftDuration");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftendampm")]
		public Microsoft.Xrm.Sdk.OptionSetValue csc_ShiftEndAMPM
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("csc_shiftendampm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ShiftEndAMPM");
				this.SetAttributeValue("csc_shiftendampm", value);
				this.OnPropertyChanged("csc_ShiftEndAMPM");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftendhours")]
		public Microsoft.Xrm.Sdk.OptionSetValue csc_ShiftEndHours
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("csc_shiftendhours");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ShiftEndHours");
				this.SetAttributeValue("csc_shiftendhours", value);
				this.OnPropertyChanged("csc_ShiftEndHours");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftendminutes")]
		public Microsoft.Xrm.Sdk.OptionSetValue csc_ShiftEndMinutes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("csc_shiftendminutes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ShiftEndMinutes");
				this.SetAttributeValue("csc_shiftendminutes", value);
				this.OnPropertyChanged("csc_ShiftEndMinutes");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftstartampm")]
		public Microsoft.Xrm.Sdk.OptionSetValue csc_ShiftStartAMPM
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("csc_shiftstartampm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ShiftStartAMPM");
				this.SetAttributeValue("csc_shiftstartampm", value);
				this.OnPropertyChanged("csc_ShiftStartAMPM");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftstarthours")]
		public Microsoft.Xrm.Sdk.OptionSetValue csc_ShiftStartHours
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("csc_shiftstarthours");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ShiftStartHours");
				this.SetAttributeValue("csc_shiftstarthours", value);
				this.OnPropertyChanged("csc_ShiftStartHours");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftstartminutes")]
		public Microsoft.Xrm.Sdk.OptionSetValue csc_ShiftStartMinutes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("csc_shiftstartminutes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_ShiftStartMinutes");
				this.SetAttributeValue("csc_shiftstartminutes", value);
				this.OnPropertyChanged("csc_ShiftStartMinutes");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_typeofoffenderaboriginal")]
		public System.Nullable<bool> csc_TypeOfOffenderAboriginal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_typeofoffenderaboriginal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_TypeOfOffenderAboriginal");
				this.SetAttributeValue("csc_typeofoffenderaboriginal", value);
				this.OnPropertyChanged("csc_TypeOfOffenderAboriginal");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_typeofoffenderelderly")]
		public System.Nullable<bool> csc_TypeOfOffenderElderly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_typeofoffenderelderly");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_TypeOfOffenderElderly");
				this.SetAttributeValue("csc_typeofoffenderelderly", value);
				this.OnPropertyChanged("csc_TypeOfOffenderElderly");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_typeofoffenderethnocultural")]
		public System.Nullable<bool> csc_TypeOfOffenderEthnocultural
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_typeofoffenderethnocultural");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_TypeOfOffenderEthnocultural");
				this.SetAttributeValue("csc_typeofoffenderethnocultural", value);
				this.OnPropertyChanged("csc_TypeOfOffenderEthnocultural");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_typeofoffenderfemale")]
		public System.Nullable<bool> csc_TypeOfOffenderFemale
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_typeofoffenderfemale");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_TypeOfOffenderFemale");
				this.SetAttributeValue("csc_typeofoffenderfemale", value);
				this.OnPropertyChanged("csc_TypeOfOffenderFemale");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_typeofoffendergeneral")]
		public System.Nullable<bool> csc_TypeOfOffenderGeneral
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("csc_typeofoffendergeneral");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_TypeOfOffenderGeneral");
				this.SetAttributeValue("csc_typeofoffendergeneral", value);
				this.OnPropertyChanged("csc_TypeOfOffenderGeneral");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Scheduled Activity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<CrmEarlyBound.csc_ScheduledActivityState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((CrmEarlyBound.csc_ScheduledActivityState)(System.Enum.ToObject(typeof(CrmEarlyBound.csc_ScheduledActivityState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Scheduled Activity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N csc_csc_scheduledactivity_csc_schedule_ScheduledActivity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("csc_csc_scheduledactivity_csc_schedule_ScheduledActivity")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.csc_Schedule> csc_csc_scheduledactivity_csc_schedule_ScheduledActivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.csc_Schedule>("csc_csc_scheduledactivity_csc_schedule_ScheduledActivity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_csc_scheduledactivity_csc_schedule_ScheduledActivity");
				this.SetRelatedEntities<CrmEarlyBound.csc_Schedule>("csc_csc_scheduledactivity_csc_schedule_ScheduledActivity", null, value);
				this.OnPropertyChanged("csc_csc_scheduledactivity_csc_schedule_ScheduledActivity");
			}
		}
		
		/// <summary>
		/// N:1 csc_csc_activitytype_csc_scheduledactivity_ActivityType
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_activitytype")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("csc_csc_activitytype_csc_scheduledactivity_ActivityType")]
		public CrmEarlyBound.csc_ActivityType csc_csc_activitytype_csc_scheduledactivity_ActivityType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.csc_ActivityType>("csc_csc_activitytype_csc_scheduledactivity_ActivityType", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_csc_activitytype_csc_scheduledactivity_ActivityType");
				this.SetRelatedEntity<CrmEarlyBound.csc_ActivityType>("csc_csc_activitytype_csc_scheduledactivity_ActivityType", null, value);
				this.OnPropertyChanged("csc_csc_activitytype_csc_scheduledactivity_ActivityType");
			}
		}
		
		/// <summary>
		/// N:1 csc_csc_location_csc_scheduledactivity_ActivityLocation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_activitylocation")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("csc_csc_location_csc_scheduledactivity_ActivityLocation")]
		public CrmEarlyBound.csc_Location csc_csc_location_csc_scheduledactivity_ActivityLocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.csc_Location>("csc_csc_location_csc_scheduledactivity_ActivityLocation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_csc_location_csc_scheduledactivity_ActivityLocation");
				this.SetRelatedEntity<CrmEarlyBound.csc_Location>("csc_csc_location_csc_scheduledactivity_ActivityLocation", null, value);
				this.OnPropertyChanged("csc_csc_location_csc_scheduledactivity_ActivityLocation");
			}
		}
		
		/// <summary>
		/// N:1 csc_csc_location_csc_scheduledactivity_Location
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_location")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("csc_csc_location_csc_scheduledactivity_Location")]
		public CrmEarlyBound.csc_Location csc_csc_location_csc_scheduledactivity_Location
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.csc_Location>("csc_csc_location_csc_scheduledactivity_Location", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_csc_location_csc_scheduledactivity_Location");
				this.SetRelatedEntity<CrmEarlyBound.csc_Location>("csc_csc_location_csc_scheduledactivity_Location", null, value);
				this.OnPropertyChanged("csc_csc_location_csc_scheduledactivity_Location");
			}
		}
		
		/// <summary>
		/// N:1 csc_csc_region_csc_scheduledactivity_Region
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_region")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("csc_csc_region_csc_scheduledactivity_Region")]
		public CrmEarlyBound.csc_Region csc_csc_region_csc_scheduledactivity_Region
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.csc_Region>("csc_csc_region_csc_scheduledactivity_Region", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("csc_csc_region_csc_scheduledactivity_Region");
				this.SetRelatedEntity<CrmEarlyBound.csc_Region>("csc_csc_region_csc_scheduledactivity_Region", null, value);
				this.OnPropertyChanged("csc_csc_region_csc_scheduledactivity_Region");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public csc_ScheduledActivity(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["csc_scheduledactivityid"] = base.Id;
                        break;
                    case "csc_scheduledactivityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_recurringfrequency")]
		public virtual csc_RecurringFrequency? csc_RecurringFrequencyEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((csc_RecurringFrequency?)(EntityOptionSetEnum.GetEnum(this, "csc_recurringfrequency")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				csc_RecurringFrequency = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftendampm")]
		public virtual csc_AM_PM? csc_ShiftEndAMPMEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((csc_AM_PM?)(EntityOptionSetEnum.GetEnum(this, "csc_shiftendampm")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				csc_ShiftEndAMPM = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftendhours")]
		public virtual csc_Hours? csc_ShiftEndHoursEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((csc_Hours?)(EntityOptionSetEnum.GetEnum(this, "csc_shiftendhours")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				csc_ShiftEndHours = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftendminutes")]
		public virtual csc_Minutes? csc_ShiftEndMinutesEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((csc_Minutes?)(EntityOptionSetEnum.GetEnum(this, "csc_shiftendminutes")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				csc_ShiftEndMinutes = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftstartampm")]
		public virtual csc_AM_PM? csc_ShiftStartAMPMEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((csc_AM_PM?)(EntityOptionSetEnum.GetEnum(this, "csc_shiftstartampm")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				csc_ShiftStartAMPM = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftstarthours")]
		public virtual csc_Hours? csc_ShiftStartHoursEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((csc_Hours?)(EntityOptionSetEnum.GetEnum(this, "csc_shiftstarthours")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				csc_ShiftStartHours = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("csc_shiftstartminutes")]
		public virtual csc_Minutes? csc_ShiftStartMinutesEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((csc_Minutes?)(EntityOptionSetEnum.GetEnum(this, "csc_shiftstartminutes")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				csc_ShiftStartMinutes = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual csc_ScheduledActivity_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((csc_ScheduledActivity_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}